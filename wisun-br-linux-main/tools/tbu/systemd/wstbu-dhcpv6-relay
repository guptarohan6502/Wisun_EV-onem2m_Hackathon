#!/usr/bin/python3
import ipaddress
import netifaces
import subprocess
import sys


# The border router's unicast IPv6 address is not known in advance, so this
# wrapper script is used to launch Dnsmasq.


WSBRD_IFNAME = 'tunwstbu'


def fatal(msg):
    print(f'\x1b[31mfatal: {msg}\x1b[0m')
    exit(1)


def main():
    if len(sys.argv) != 2:
        fatal(f'usage: {sys.argv[0]} [DHCPv6 server address]')
    dhcpv6_server_addr = sys.argv[1]

    wsbrd_addr = None
    if WSBRD_IFNAME not in netifaces.interfaces():
        fatal(f'interface {WSBRD_IFNAME} does not exist')
    for addr in netifaces.ifaddresses(WSBRD_IFNAME).get(netifaces.AF_INET6, []):
        addr = ipaddress.IPv6Address(addr['addr'])
        if not addr.is_link_local:
            wsbrd_addr = addr
            break
    if not wsbrd_addr:
        fatal(f'no valid address on {WSBRD_IFNAME}')

    cmd = [
        'dnsmasq',
        '--port=0', # Disable DNS
        '--keep-in-foreground',
        '--conf-file=/dev/null',
        f'--dhcp-relay={wsbrd_addr},{dhcpv6_server_addr}',
        '--log-debug',
        '--log-dhcp',
    ]
    print(' '.join(cmd))
    try:
        ret = subprocess.run(cmd)
    except Exception as e:
        fatal(f'failed to run dnsmasq: {e}')
    fatal(f'dnsmasq exited with code {ret.returncode}')


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit(0)
